@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-row($direction) {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: $direction;
}

@mixin flex-column($v-direction, $h-direction: center) {
  display: flex;
  flex-direction: column;
  align-items: $v-direction;
  justify-content: $h-direction;
}

@mixin flex-wrap {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

@mixin text-scaffold($fs, $fw, $color, $lh, $ls) {
  font-size: $fs  !important;
  font-weight: $fw  !important;
  color: $color  !important;
  line-height: $lh  !important;
  letter-spacing: $ls  !important;
}

@mixin v-img($width) {
  height: auto;
  width: $width;
}

@mixin h-img($height) {
  width: auto;
  height: $height;
}

@mixin fit-img {
  width: 100%;
  height: auto;
  object-fit: contain;
}

@mixin hero-img($url) {
  background-image: url($url);
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

@mixin submissiveBox {
  width: max-content;
  height: max-content;
}

@mixin fullBox {
  width: 100%;
  height: 100%;
}

@mixin halfSubmissive {
  height: max-content;
  width: 100%;
}

@mixin mq($size) {
  @media(max-width: $size) {
    @content;
  }
}

@mixin desktop($display, $size) {
  display: $display  !important;

  @include mq($size) {
    display: none !important;
  }
}

@mixin mobile($display, $size) {
  display: none !important;

  @include mq($size) {
    display: $display  !important;
  }
}

$parallax-perspective : 1 !default;
$parallax-element : "body" !default;
$parallax-ios : true !default;

@mixin parallax-init($perspective : $parallax-perspective,
  $element : $parallax-element,
  $parallax-ios : $parallax-ios ) {
  @if $element =="body" {

    html,
    body {
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
    }
  }

  #{$element} {
    overflow: auto;
    @include perspective($perspective * 1px);
    @include transform-style(preserve-3d);

    // Allows for smooth scrolling but disables parallax effects.
    @if $parallax-ios ==false {
      -webkit-overflow-scrolling: touch;
    }

    // Preserve 3D
    &,
    * {
      @include transform-style(preserve-3d);
    }
  }
}

@mixin parallax($distance : 0,
  $perspective : $parallax-perspective ) {
  @include transform(translateZ($distance * $perspective * 1px) scale(abs($distance - 1)));
  z-index: $distance * 1000;
}

// End of magic parallax mixins